
import { createSlice,nanoid } from "@reduxjs/toolkit";

const todoSlice = createSlice({
    name : 'todo',
    initialState : [{id:1,todoData : 'todo 1'}],
    reducers : {
        addTodo : (state, action) => {
            let todoText = action.payload.todoText;
            state.push({
                id : nanoid(),
                todoData : todoText,               
            })           
        },
        editTodo : (state,action) => {
            let payloadTodo = action.payload.todo;
            let todoText = action.payload.todoText;
            state = state.map((currentTodo) => {
                if(currentTodo.id === payloadTodo.id){
                    currentTodo.todoData = todoText
                }
                return currentTodo
            })
        },
        deleteTodo : (state,action) => {
            let payloadTodo = action.payload.todo;
            return state.filter((currentTodo) => currentTodo.id !== payloadTodo.id);
        }
    }
})

export const {addTodo,editTodo,deleteTodo} = todoSlice.actions;
export default todoSlice.reducer;

//createSlice automitacially generate an object which contain 'action creator' and 'action type' 

//addTodo: This is an action creator function generated by createSlice. It takes one argument, which is an object with a todoText property. When you call addTodo, it creates an action with a type of "todo/addTodo" (where "todo" is the name of the slice) and the payload is the object containing the todoText. This action is used to add a new to-do item to the todoList.

// SO ACTION CREATOR IS → addTodo
// AND ACTION TYPE IS → "todo/addTodo" (where "todo" is the name of the slice)